ASFLAGS  += -D__ARM_32__
ASFLAGS  += -marm
CFLAGS   += -D__ARM_32__
CFLAGS   += -marm -fms-extensions
CXXFLAGS += -D__ARM_32__
CXXFLAGS += -marm -fms-extensions

CINCLUDES   += -I$(CONFIG_UK_BASE)/arch/arm/arm/include
ASINCLUDES  += -I$(CONFIG_UK_BASE)/arch/arm/arm/include
CXXINCLUDES += -I$(CONFIG_UK_BASE)/arch/arm/arm/include

# Set GCC flags for MARCH_ARM32_GENERICV7. GCC supports -mtune=generic-armv7-a from 4.7
ifeq ($(CONFIG_MARCH_ARM32_GENERICV7),y)
$(call error_if_gcc_version_lt,4,7)
CFLAGS-$(call gcc_version_ge,4,7)	+= -march=armv7-a -mtune=generic-armv7-a
CXXFLAGS-$(call gcc_version_ge,4,7)	+= -march=armv7-a -mtune=generic-armv7-a
endif

# Set GCC flags for MARCH_ARM32_CORTEXA5. GCC supports -mcpu=cortex-a5 from 4.5
ifeq ($(CONFIG_MARCH_ARM32_CORTEXA5),y)
$(call error_if_gcc_version_lt,4,5)
CFLAGS-$(call gcc_version_ge,4,5)	+= -mcpu=cortex-a5 -mtune=cortex-a5
CXXFLAGS-$(call gcc_version_ge,4,5)	+= -mcpu=cortex-a5 -mtune=cortex-a5
endif

# Set GCC flags for MARCH_ARM32_CORTEXA7. GCC supports -mcpu=cortex-a7 from 4.7
ifeq ($(CONFIG_MARCH_ARM32_CORTEXA7),y)
$(call error_if_gcc_version_lt,4,7)
CFLAGS-$(call gcc_version_ge,4,7)	+= -mcpu=cortex-a7 -mtune=cortex-a7
CXXFLAGS-$(call gcc_version_ge,4,7)	+= -mcpu=cortex-a7 -mtune=cortex-a7
endif

# Set GCC flags for MARCH_ARM32_CORTEXA8. GCC supports -mcpu=cortex-a8 from 4.3
ifeq ($(CONFIG_MARCH_ARM32_CORTEXA8),y)
$(call error_if_gcc_version_lt,4,3)
CFLAGS-$(call gcc_version_ge,4,3)	+= -mcpu=cortex-a8 -mtune=cortex-a8
CXXFLAGS-$(call gcc_version_ge,4,3)	+= -mcpu=cortex-a8 -mtune=cortex-a8
endif

# Set GCC flags for MARCH_ARM32_CORTEXA9. GCC supports -mcpu=cortex-a9 from 4.4
ifeq ($(CONFIG_MARCH_ARM32_CORTEXA9),y)
$(call error_if_gcc_version_lt,4,4)
CFLAGS-$(call gcc_version_ge,4,4)	+= -mcpu=cortex-a9 -mtune=cortex-a9
CXXFLAGS-$(call gcc_version_ge,4,4)	+= -mcpu=cortex-a9 -mtune=cortex-a9
endif

# Set GCC flags for MARCH_ARM32_CORTEXA12. GCC supports -mcpu=cortex-a12 from 4.9
ifeq ($(CONFIG_MARCH_ARM32_CORTEXA12),y)
$(call error_if_gcc_version_lt,4,9)
CFLAGS-$(call gcc_version_ge,4,9)	+= -mcpu=cortex-a12 -mtune=cortex-a12
CXXFLAGS-$(call gcc_version_ge,4,9)	+= -mcpu=cortex-a12 -mtune=cortex-a12
endif

# Set GCC flags for MARCH_ARM32_CORTEXA15. GCC supports -mcpu=cortex-a15 from 4.6
ifeq ($(CONFIG_MARCH_ARM32_CORTEXA15),y)
$(call error_if_gcc_version_lt,4,6)
CFLAGS-$(call gcc_version_ge,4,6)	+= -mcpu=cortex-a15 -mtune=cortex-a15
CXXFLAGS-$(call gcc_version_ge,4,6)	+= -mcpu=cortex-a15 -mtune=cortex-a15
endif

# Set GCC flags for MARCH_ARM32_CORTEXA17. GCC supports -mcpu=cortex-a17 from 6.1
ifeq ($(CONFIG_MARCH_ARM32_CORTEXA17),y)
$(call error_if_gcc_version_lt,6,1)
CFLAGS-$(call gcc_version_ge,6,1)	+= -mcpu=cortex-a17 -mtune=cortex-a17
CXXFLAGS-$(call gcc_version_ge,6,1)	+= -mcpu=cortex-a17 -mtune=cortex-a17
endif

# Set GCC flags for MARCH_ARM32_CORTEXA32. GCC supports -mcpu=cortex-a32 from 6.1
ifeq ($(CONFIG_MARCH_ARM32_CORTEXA32),y)
$(call error_if_gcc_version_lt,6,1)
CFLAGS-$(call gcc_version_ge,6,1)	+= -mcpu=cortex-a32 -mtune=cortex-a32
CXXFLAGS-$(call gcc_version_ge,6,1)	+= -mcpu=cortex-a32 -mtune=cortex-a32
endif

# Set GCC flags for MARCH_ARM32_CORTEXA35. GCC supports -mcpu=cortex-a35 from 6.1
ifeq ($(CONFIG_MARCH_ARM32_CORTEXA35),y)
$(call error_if_gcc_version_lt,6,1)
CFLAGS-$(call gcc_version_ge,6,1)	+= -mcpu=cortex-a35 -mtune=cortex-a35
CXXFLAGS-$(call gcc_version_ge,6,1)	+= -mcpu=cortex-a35 -mtune=cortex-a35
endif

# Set GCC flags for MARCH_ARM32_A20NEON. GCC supports -mcpu=cortex-a7 from 4.7
ifeq ($(CONFIG_MARCH_ARM32_A20NEON),y)
$(call error_if_gcc_version_lt,4,7)
CFLAGS-$(call gcc_version_ge,4,7)	+= -mcpu=cortex-a7 -mtune=cortex-a7 -mfpu=vfpv4-d16 -mfpu=neon-vfpv4 -funsafe-math-optimizations
CXXFLAGS-$(call gcc_version_ge,4,7)	+= -mcpu=cortex-a7 -mtune=cortex-a7 -mfpu=vfpv4-d16 -mfpu=neon-vfpv4 -funsafe-math-optimizations
endif

$(eval $(call addlib,libarmmath))
LIBARMMATH_SRCS-$(CONFIG_ARCH_ARM_32) += $(CONFIG_UK_BASE)/arch/arm/arm/divsi3.S
LIBARMMATH_SRCS-$(CONFIG_ARCH_ARM_32) += $(CONFIG_UK_BASE)/arch/arm/arm/ldivmod.S
LIBARMMATH_SRCS-$(CONFIG_ARCH_ARM_32) += $(CONFIG_UK_BASE)/arch/arm/arm/ldivmod_helper.c
LIBARMMATH_SRCS-$(CONFIG_ARCH_ARM_32) += $(CONFIG_UK_BASE)/arch/arm/arm/qdivrem.c
